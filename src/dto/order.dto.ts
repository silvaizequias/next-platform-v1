import * as z from 'zod'

export const OrderCreateDTO = z.object({
  code: z.string(),
  observation: z.string().optional(),
  organization: z.string(),
  customer: z.string(),
  member: z.string().optional(),
  originZipCode: z.string().length(8).optional(),
  originComplement: z.string().optional(),
  originLatitude: z.coerce.number().optional(),
  originLongitude: z.coerce.number().optional(),
  destinationZipCode: z.string().length(8).optional(),
  destinationComplement: z.string().optional(),
  destinationLatitude: z.coerce.number().optional(),
  destinationLongitude: z.coerce.number().optional(),
  deadline: z.coerce.date().optional(),
  started: z.boolean().optional().default(false),
  startDate: z.coerce.date().optional(),
  startNode: z.string().optional(),
  completed: z.boolean().optional().default(false),
  completationDate: z.coerce.date().optional(),
  completationNode: z.string().optional(),
  canceled: z.boolean().optional().default(false),
  cancellationDate: z.coerce.date().optional(),
  cancellationNode: z.string().optional(),
})
export type OrderCreateDTOType = z.infer<typeof OrderCreateDTO>

export const OrderUpdateDTO = z.object({
  observation: z.string().optional(),
  organization: z.string().optional(),
  customer: z.string().optional(),
  member: z.string().optional(),
  originZipCode: z.string().length(8).optional(),
  originComplement: z.string().optional(),
  originLatitude: z.coerce.number().optional(),
  originLongitude: z.coerce.number().optional(),
  destinationZipCode: z.string().length(8).optional(),
  destinationComplement: z.string().optional(),
  destinationLatitude: z.coerce.number().optional(),
  destinationLongitude: z.coerce.number().optional(),
  deadline: z.coerce.date().optional(),
  started: z.boolean().optional().default(false),
  startDate: z.coerce.date().optional(),
  startNode: z.string().optional(),
  completed: z.boolean().optional().default(false),
  completationDate: z.coerce.date().optional(),
  completationNode: z.string().optional(),
  canceled: z.boolean().optional().default(false),
  cancellationDate: z.coerce.date().optional(),
  cancellationNode: z.string().optional(),
})
export type OrderUpdateDTOType = z.infer<typeof OrderUpdateDTO>
