generator client {
    provider = "prisma-client-js"
    output   = "../node_modules/@schema-generations/client/driving"
}

datasource db {
    provider     = "postgres"
    url          = env("DRIVING_DATABASE_URL")
    relationMode = "prisma"
}

enum MemberRole {
    OWNER
    ADMINISTRATOR
    SECRETARY
    INSTRUCTOR
    CUSTOMER
}

enum DocType {
    CPF
    CNPJ
    RG
    CNH
    CTPS
    PASSPORT
}

model Owner {
    id          String    @id @default(cuid())
    createdAt   DateTime  @default(now()) @map("created_at")
    updatedAt   DateTime  @updatedAt @map("updated_at")
    deletedAt   DateTime? @map("deleted_at") @db.Date
    softDeleted Boolean?  @default(false) @map("soft_deleted")

    serviceId      String @map("service_id")
    subscriptionId String @map("subscription_id")
    userId         String @map("user_id")

    isActive Boolean  @default(true) @map("is_active")
    company  Company?

    @@map("owners")
}

model Company {
    id          String    @id @default(cuid())
    createdAt   DateTime  @default(now()) @map("created_at")
    updatedAt   DateTime  @updatedAt @map("updated_at")
    deletedAt   DateTime? @map("deleted_at") @db.Date
    softDeleted Boolean?  @default(false) @map("soft_deleted")

    ownerId String @unique @map("owner_id")
    owner   Owner  @relation(fields: [ownerId], references: [id])

    name   String
    cnpj   String? @unique
    domain String?
    email  String  @unique
    phone  String? @unique

    zipCode    String?
    complement String?

    members  Member[]
    vehicles Vehicle[]

    @@map("companies")
}

model Member {
    id          String    @id @default(cuid())
    createdAt   DateTime  @default(now()) @map("created_at")
    updatedAt   DateTime  @updatedAt @map("updated_at")
    deletedAt   DateTime? @map("deleted_at") @db.Date
    softDeleted Boolean?  @default(false) @map("soft_deleted")

    companyId String  @map("company_id")
    company   Company @relation(fields: [companyId], references: [id])

    role    MemberRole? @default(CUSTOMER)
    name    String
    email   String?     @unique
    image   String?
    phone   String?     @unique
    docType DocType?    @default(CPF) @map("doc_type")
    docCode String?     @unique @map("doc_code")

    zipCode    String? @map("zip_code")
    complement String?

    @@index([companyId])
    @@map("members")
}

model Vehicle {
    id          String    @id @default(cuid())
    createdAt   DateTime  @default(now()) @map("created_at")
    updatedAt   DateTime  @updatedAt @map("updated_at")
    deletedAt   DateTime? @map("deleted_at") @db.Date
    softDeleted Boolean?  @default(false) @map("soft_deleted")

    companyId String  @map("company_id")
    company   Company @relation(fields: [companyId], references: [id])

    vehicleModel    String? @map("vehicle_model")
    vehicleCategory String? @map("vehicle_category")
    licensePlate    String? @unique @map("license_plate")

    isAvaliable Boolean? @default(true) @map("is_avaliable")

    @@map("vehicles")
    @@index([companyId])
}
